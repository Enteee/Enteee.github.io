version: '2'

services:
    jekyll:
        build: ${CONTAINER_DIR}/jekyll
        command: jekyll build --watch
        volumes:
            - ./:/srv/jekyll:ro
            - www:/srv/jekyll/_site:rw

    jekyll-dev:
        build: ${CONTAINER_DIR}/jekyll
        command: jekyll build --drafts --watch
        volumes:
            - ./:/srv/jekyll:ro
            - www-dev:/srv/jekyll/_site:rw

    nginx-dockerize:
        image: nginx-dockerize
        build: ${CONTAINER_DIR}/nginx-dockerize

    nginx-http:
        depends_on:
            - nginx-dockerize
        image: nginx-http
        build: ${CONTAINER_DIR}/nginx-http
        command: -template ${DOCKERIZE_CONF_DIR}/conf.d/:/etc/nginx/conf.d/ -template ${DOCKERIZE_CONF_DIR}/htpasswd:/etc/nginx/.htpasswd -stdout /var/log/nginx/access.log -stderr /var/log/nginx/error.log ./start.sh
        ports:
            - 80:80
            - 8080:8080
        volumes:
            - ${CONTAINER_DIR}/nginx-http/conf.d/:${DOCKERIZE_CONF_DIR}/conf.d:ro
            - ${CONTAINER_DIR}/nginx-http/htpasswd:${DOCKERIZE_CONF_DIR}/htpasswd:ro
            - acme-challenge:/usr/share/nginx/letsencrypt/.well-known/acme-challenge:ro
            - www-dev:/usr/share/nginx/html:ro
        networks:
            backbone:
                aliases:
                    - nginx-http

    nginx-https:
        depends_on:
            - nginx-dockerize
        build: ${CONTAINER_DIR}/nginx-https
        command: -template ${DOCKERIZE_CONF_DIR}/conf.d/:/etc/nginx/conf.d/ -stdout /var/log/nginx/access.log -stderr /var/log/nginx/error.log -wait file:///certs/duckpond.ch/cert.pem -wait file:///certs/duckpond.ch/privkey.pem -timeout 60s ./start.sh
        ports:
            - 443:443
        volumes:
            - ${CONTAINER_DIR}/nginx-http/conf.d/:${DOCKERIZE_CONF_DIR}/conf.d:ro
            - certs:/certs/:ro
            - www:/usr/share/nginx/html:ro
        networks:
            backbone:
                aliases:
                    - duckpond.ch
                    - nginx-https

    letsencrypt:
        depends_on:
            - nginx-http
        build: ${CONTAINER_DIR}/dehydrated
        command: dehydrated -c 
        volumes:
            - ${CONTAINER_DIR}/dehydrated/etc:/etc/dehydrated:ro
            - certs:/etc/dehydrated/certs:rw
            - acme-challenge:/etc/dehydrated/acme-challenge:rw

    isso:
        depends_on:
            - nginx-https
        build: ${CONTAINER_DIR}/isso
        command: dockerize -wait tcp://nginx-https:443 start.sh -timeout 60s
        environment:
            - GID=${GID}
            - UID=${UID}
        volumes:
            - ${CONTAINER_DIR}/isso/config:/config
            - ${CONTAINER_DIR}/isso/db:/db
        networks:
            backbone:
                aliases:
                    - isso

    challenges:
        build: ${CONTAINER_DIR}/challenges
        ports:
            - 8888:8888
            - 8889:8889
        networks:
            backbone:
                aliases:
                    - challenges
volumes:
    www:
    www-dev:
    certs:
    acme-challenge:

networks:
    backbone:
