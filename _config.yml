title: duckpond.ch
tagline: I like ducks!
description: Deep dive and high quality tech blogging about stuff I have created, contributed or I find interesting.
logo: /static/img/duck2.png
author:
  site: Ente
  twitter: Enteeeeeee
twitter:
  username: Enteeeeeee
  card: summary_large_image
social:
  name: Ente
  links:
    - https://github.com/Enteee
    - https://twitter.com/Enteeeeeee
    - https://stackoverflow.com/users/3215929/ente
timezone: "Europe/Zurich"
urls:
    - text: About
      url: /about/
    - text: Donate
      url: https://github.com/sponsors/Enteee
    - text: Atom-feed
      url: /feed.xml
url: "https://duckpond.ch"
paginate: 20
paginate_path: "/page:num/"
markdown: kramdown
host: localhost
exclude: ["Gemfile", "Gemfile.lock", "README.md", "docker-compose.yml", "up.sh", "_env" ]
plugins:
    - jekyll-paginate
    - jekyll-feed
    - jekyll-sitemap
    - jekyll-seo-tag
    - jekyll-responsive-image
    - jekyll-minifier
    - jekyll-redirect-from

compress_html:
  clippings: all
  comments: all
  endings: [html, head, body, li, dt, dd, rt, rp, optgroup, option, colgroup, caption, thead, tbody, tfoot, tr, td, th]
  profile: false
  blanklines: false
  ignore:
    envs: []

responsive_image:
  # [Required]
  # Path to the image template.
  template: _layouts/responsive_image.html

  # [Optional, Default: 85]
  # Quality to use when resizing images.
  default_quality: 90

  # [Optional, Default: []]
  # An array of resize configuration objects. Each object must contain at least
  # a `width` value.
  sizes:
    - width: 480  # [Required] How wide the resized image will be.
    - width: 800
    - width: 1400

  # [Optional, Default: false]
  # Rotate resized images depending on their EXIF rotation attribute. Useful for
  # working with JPGs directly from digital cameras and smartphones
  auto_rotate: true

  # [Optional, Default: false]
  # Strip EXIF and other JPEG profiles. Helps to minimize JPEG size and win friends
  # at Google PageSpeed.
  strip: true

  # [Optional, Default: assets]
  # The base directory where assets are stored. This is used to determine the
  # `dirname` value in `output_path_format` below.
  base_path: static

  # [Optional, Default: assets/resized/%{filename}-%{width}x%{height}.%{extension}]
  # The template used when generating filenames for resized images. Must be a
  # relative path.
  #
  # Parameters available are:
  #   %{dirname}     Directory of the file relative to `base_path` (assets/sub/dir/some-file.jpg => sub/dir)
  #   %{basename}    Basename of the file (assets/some-file.jpg => some-file.jpg)
  #   %{filename}    Basename without the extension (assets/some-file.jpg => some-file)
  #   %{extension}   Extension of the file (assets/some-file.jpg => jpg)
  #   %{width}       Width of the resized image
  #   %{height}      Height of the resized image
  #
  output_path_format: static/resized/%{filename}-%{width}x%{height}.%{extension}

  # [Optional, Default: true]
  # Whether or not to save the generated assets into the source folder.
  save_to_source: false

  # [Optional, Default: false]
  # Cache the result of {% responsive_image %} and {% responsive_image_block %}
  # tags. See the "Caching" section of the README for more information.
  cache: false

  # [Optional, Default: []]
  # By default, only images referenced by the responsive_image and responsive_image_block
  # tags are resized. Here you can set a list of paths or path globs to resize other
  # images. This is useful for resizing images which will be referenced from stylesheets.
  #extra_images:
